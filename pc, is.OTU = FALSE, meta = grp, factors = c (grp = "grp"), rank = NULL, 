decostand                package:vegan                 R Documentation

_S_t_a_n_d_a_r_d_i_z_a_t_i_o_n _M_e_t_h_o_d_s _f_o_r _C_o_m_m_u_n_i_t_y _E_c_o_l_o_g_y

_D_e_s_c_r_i_p_t_i_o_n:

     The function provides some popular (and effective) standardization
     methods for community ecologists.

_U_s_a_g_e:

     decostand(x, method, MARGIN, range.global, logbase = 2, na.rm=FALSE, ...)
     wisconsin(x)
     
_A_r_g_u_m_e_n_t_s:

       x: Community data, a matrix-like object.

  method: Standardization method. See Details for available options.

  MARGIN: Margin, if default is not acceptable. ‘1’ = rows, and ‘2’ =
          columns of ‘x’.

range.global: Matrix from which the range is found in ‘method =
          "range"’.  This allows using same ranges across subsets of
          data.  The dimensions of ‘MARGIN’ must match with ‘x’.

 logbase: The logarithm base used in ‘method = "log"’.

   na.rm: Ignore missing values in row or column standardizations.

     ...: Other arguments to the function (ignored).

_D_e_t_a_i_l_s:

     The function offers following standardization methods for
     community data:

        • ‘total’: divide by margin total (default ‘MARGIN = 1’).

        • ‘max’: divide by margin maximum (default ‘MARGIN = 2’).

        • ‘freq’: divide by margin maximum and multiply by the number
          of non-zero items, so that the average of non-zero entries is
          one (Oksanen 1983; default ‘MARGIN = 2’).

        • ‘normalize’: make margin sum of squares equal to one (default
          ‘MARGIN = 1’).

        • ‘range’: standardize values into range 0 ... 1 (default
          ‘MARGIN = 2’).  If all values are constant, they will be
          transformed to 0.

        • ‘standardize’: scale ‘x’ to zero mean and unit variance
          (default ‘MARGIN = 2’).

        • ‘pa’: scale ‘x’ to presence/absence scale (0/1).

        • ‘chi.square’: divide by row sums and square root of column
          sums, and adjust for square root of matrix total (Legendre &
          Gallagher 2001). When used with the Euclidean distance, the
          distances should be similar to the Chi-square distance used
          in correspondence analysis. However, the results from
          ‘cmdscale’ would still differ, since CA is a weighted
          ordination method (default ‘MARGIN = 1’).

        • ‘hellinger’: square root of ‘method = "total"’ (Legendre &
          Gallagher 2001).

        • ‘log’: logarithmic transformation as suggested by Anderson et
          al. (2006): log_b (x) + 1 for x > 0, where b is the base of
          the logarithm; zeros are left as zeros. Higher bases give
          less weight to quantities and more to presences, and ‘logbase
          = Inf’ gives the presence/absence scaling. Please note this
          is _not_ log(x+1).  Anderson et al. (2006) suggested this for
          their (strongly) modified Gower distance (implemented as
          ‘method = "altGower"’ in ‘vegdist’), but the standardization
          can be used independently of distance indices.

     Standardization, as contrasted to transformation, means that the
     entries are transformed relative to other entries.

     All methods have a default margin. ‘MARGIN=1’ means rows (sites in
     a normal data set) and ‘MARGIN=2’ means columns (species in a
     normal data set).

     Command ‘wisconsin’ is a shortcut to common Wisconsin double
     standardization where species (‘MARGIN=2’) are first standardized
     by maxima (‘max’) and then sites (‘MARGIN=1’) by site totals
     (‘tot’).

     Most standardization methods will give nonsense results with
     negative data entries that normally should not occur in the
     community data. If there are empty sites or species (or constant
     with ‘method = "range"’), many standardization will change these
     into ‘NaN’.

_V_a_l_u_e:

     Returns the standardized data frame, and adds an attribute
     ‘"decostand"’ giving the name of applied standardization
     ‘"method"’.

_N_o_t_e:

     Common transformations can be made with standard R functions.

_A_u_t_h_o_r(_s):

     Jari Oksanen, Etienne Laliberté (‘method = "log"’).

_R_e_f_e_r_e_n_c_e_s:

     Anderson, M.J., Ellingsen, K.E. & McArdle, B.H. (2006)
     Multivariate dispersion as a measure of beta diversity. _Ecology
     Letters_ *9*, 683-693.

     Legendre, P. & Gallagher, E.D. (2001) Ecologically meaningful
     transformations for ordination of species data. _Oecologia_ *129*,
     271-280.

     Oksanen, J. (1983) Ordination of boreal heath-like vegetation with
     principal component analysis, correspondence analysis and
     multidimensional scaling. _Vegetatio_ *52*, 181-189.

_E_x_a_m_p_l_e_s:

     data(varespec)
     sptrans <- decostand(varespec, "max")
     apply(sptrans, 2, max)
     sptrans <- wisconsin(varespec)
     
     ## Chi-square: PCA similar but not identical to CA.
     ## Use wcmdscale for weighted analysis and identical results.
     sptrans <- decostand(varespec, "chi.square")
     plot(procrustes(rda(sptrans), cca(varespec)))
     

vegdist                 package:vegan                  R Documentation

_D_i_s_s_i_m_i_l_a_r_i_t_y _I_n_d_i_c_e_s _f_o_r _C_o_m_m_u_n_i_t_y _E_c_o_l_o_g_i_s_t_s

_D_e_s_c_r_i_p_t_i_o_n:

     The function computes dissimilarity indices that are useful for or
     popular with community ecologists. All indices use quantitative
     data, although they would be named by the corresponding binary
     index, but you can calculate the binary index using an appropriate
     argument.  If you do not find your favourite index here, you can
     see if it can be implemented using ‘designdist’.  Gower,
     Bray-Curtis, Jaccard and Kulczynski indices are good in detecting
     underlying ecological gradients (Faith et al. 1987). Morisita,
     Horn-Morisita, Binomial, Cao and Chao indices should be able to
     handle different sample sizes (Wolda 1981, Krebs 1999, Anderson &
     Millar 2004), and Mountford (1962) and Raup-Crick indices for
     presence-absence data should be able to handle unknown (and
     variable) sample sizes.

_U_s_a_g_e:

     vegdist(x, method="bray", binary=FALSE, diag=FALSE, upper=FALSE,
             na.rm = FALSE, ...) 
     
_A_r_g_u_m_e_n_t_s:

       x: Community data matrix.

  method: Dissimilarity index, partial match to ‘"manhattan"’,
          ‘"euclidean"’, ‘"canberra"’, ‘"bray"’, ‘"kulczynski"’,
          ‘"jaccard"’, ‘"gower"’, ‘"altGower"’, ‘"morisita"’, ‘"horn"’,
          ‘"mountford"’, ‘"raup"’ , ‘"binomial"’, ‘"chao"’, ‘"cao"’ or
          ‘"mahalanobis"’.

  binary: Perform presence/absence standardization before analysis
          using ‘decostand’.

    diag: Compute diagonals.

   upper: Return only the upper diagonal.

   na.rm: Pairwise deletion of missing observations when computing
          dissimilarities.

     ...: Other parameters.  These are ignored, except in ‘method
          ="gower"’ which accepts ‘range.global’ parameter of
          ‘decostand’. .

_D_e_t_a_i_l_s:

     Jaccard (‘"jaccard"’), Mountford (‘"mountford"’), Raup-Crick
     (‘"raup"’), Binomial and Chao indices are discussed later in this
     section.  The function also finds indices for presence/ absence
     data by setting ‘binary = TRUE’. The following overview gives
     first the quantitative version, where x[ij] x[ik] refer to the
     quantity on species (column) i and sites (rows) j and k. In binary
     versions A and B are the numbers of species on compared sites, and
     J is the number of species that occur on both compared sites
     similarly as in ‘designdist’ (many indices produce identical
     binary versions):

       ‘euclidean’   d[jk] = sqrt(sum(x[ij]-x[ik])^2)                             
                     binary: sqrt(A+B-2*J)                                        
       ‘manhattan’   d[jk] = sum(abs(x[ij] - x[ik]))                              
                     binary: A+B-2*J                                              
       ‘gower’       d[jk] = (1/M) sum(abs(x[ij]-x[ik])/(max(x[i])-min(x[i])))    
                     binary: (A+B-2*J)/M,                                         
                     where M is the number of columns (excluding missingvalues)   
                                                                                  
       ‘altGower’    d[jk] = (1/NZ) sum(abs(x[ij] - x[ik]))                       
                     where NZ is the number of non-zero columns excluding 
                     double-zeros (Anderson et al. 2006). 
                     binary: (A+B-2*J)/(A+B-J)                                    
       ‘canberra’    d[jk] = (1/NZ) sum ((x[ij]-x[ik])/(x[ij]+x[ik]))             
                     where NZ is the number of non-zero entries.                  
                     binary: (A+B-2*J)/(A+B-J)                                    
       ‘bray’        d[jk] = (sum abs(x[ij]-x[ik]))/(sum (x[ij]+x[ik]))           
                     binary: (A+B-2*J)/(A+B)                                      
       ‘kulczynski’  d[jk] 1 - 0.5*((sum min(x[ij],x[ik])/(sum x[ij]) + (sum 
                     min(x[ij],x[ik])/(sum x[ik])) 
                     binary: 1-(J/A + J/B)/2                                      
       ‘morisita’    d[jk] =  1 - 2*sum(x[ij]*x[ik])/((lambda[j]+lambda[k]) * 
                     sum(x[ij])*sum(x[ik])), where 
                     lambda[j] = sum(x[ij]*(x[ij]-1))/sum(x[ij])*sum(x[ij]-1)     
                     binary: cannot be calculated                                 
       ‘horn’        Like ‘morisita’, but lambda[j] = sum(x[ij]^2)/(sum(x[ij])^2) 
                     binary: (A+B-2*J)/(A+B)                                      
       ‘binomial’    d[jk] = 
                     sum(x[ij]*log(x[ij]/n[i]) + x[ik]*log(x[ik]/n[i]) - 
                     n[i]*log(1/2))/n[i], 
                     where n[i] = x[ij] + x[ik]                                   
                     binary: log(2)*(A+B-2*J)                                     
       ‘cao’         d[jk] = (1/S) * sum(log(n[i]/2) - 
                     (x[ij]*log(x[ik]) + x[ik]*log(x[ij]))/n[i]), 
                     where S is the number of species in compared sites and 
                     n[i] = x[ij] + x[ik] 
      
     Jaccard index is computed as 2B/(1+B), where B is Bray-Curtis
     dissimilarity.

     Binomial index is derived from Binomial deviance under null
     hypothesis that the two compared communities are equal. It should
     be able to handle variable sample sizes. The index does not have a
     fixed upper limit, but can vary among sites with no shared
     species. For further discussion, see Anderson & Millar (2004).

     Cao index or CYd index (Cao et al. 1997) was suggested as a
     minimally biased index for high beta diversity and variable
     sampling intensity.  Cao index does not have a fixed upper limit,
     but can vary among sites with no shared species.  The index is
     intended for count (integer) data, and it is undefined for zero
     abundances; these are replaced with arbitrary value 0.1 following
     Cao et al. (1997).  Cao et al. (1997) used log10, but the current
     function uses natural logarithms so that the values are
     approximately 2.30 times higher than with 10-based logarithms.
     Anderson & Thompson (2004) give an alternative formulation of Cao
     index to highlight its relationship with Binomial index (above).

     Mountford index is defined as M = 1/alpha where alpha is the
     parameter of Fisher's logseries assuming that the compared
     communities are samples from the same community (cf. ‘fisherfit’,
     ‘fisher.alpha’). The index M is found as the positive root of
     equation exp(a*M) + exp(b*M) = 1 + exp((a+b-j)*M), where j is the
     number of species occurring in both communities, and a and b are
     the number of species in each separate community (so the index
     uses presence-absence information). Mountford index is usually
     misrepresented in the literature: indeed Mountford (1962)
     suggested an approximation to be used as starting value in
     iterations, but the proper index is defined as the root of the
     equation above. The function ‘vegdist’ solves M with the Newton
     method. Please note that if either a or b are equal to j, one of
     the communities could be a subset of other, and the dissimilarity
     is 0 meaning that non-identical objects may be regarded as similar
     and the index is non-metric. The Mountford index is in the range 0
     ... log(2), but the dissimilarities are divided by log(2) so that
     the results will be in the conventional range 0 ... 1.

     Raup-Crick dissimilarity (‘method = "raup"’) is a probabilistic
     index based on presence/absence data.  It is defined as 1 -
     prob(j), or based on the probability of observing at least j
     species in shared in compared communities.  The current function
     uses analytic result from hypergeometric distribution (‘phyper’)
     to find the probabilities.  This probability (and the index) is
     dependent on the number of species missing in both sites, and
     adding all-zero species to the data or removing missing species
     from the data will influence the index.  The probability (and the
     index) may be almost zero or almost one for a wide range of
     parameter values.  The index is nonmetric: two communities with no
     shared species may have a dissimilarity slightly below one, and
     two identical communities may have dissimilarity slightly above
     zero. The index uses equal occurrence probabilities for all
     species, but Raup and Crick originally suggested that sampling
     probabilities should be proportional to species frequencies (Chase
     et al. 2011). A simulation approach with unequal species sampling
     probabilities is implemented in ‘raupcrick’ function following
     Chase et al. (2011).  The index can be also used for transposed
     data to give a probabilistic dissimilarity index of species
     co-occurrence (identical to Veech 2013).

     Chao index tries to take into account the number of unseen species
     pairs, similarly as in ‘method = "chao"’ in ‘specpool’. Function
     ‘vegdist’ implements a Jaccard type index defined as d[jk] = 1 -
     U[j]*U[k]/(U[j] + U[k] - U[j]*U[k]), where U[j] = C[j]/N[j] +
     (N[k] -1)/N[k] * a1/(2*a2) * S[j]/N[j], and similarly for U[k].
     Here C[j] is the total number of individuals in the species of
     site j that are shared with site k, N[j] is the total number of
     individuals at site j, a1 (and a2) are the number of species
     occurring in site j that have only one (or two) individuals in
     site k, and S[j] is the total number of individuals in the species
     present at site j that occur with only one individual in site k
     (Chao et al. 2005).

     Morisita index can be used with genuine count data (integers)
     only. Its Horn-Morisita variant is able to handle any abundance
     data.

     Mahalanobis distances are Euclidean distances of a matrix where
     columns are centred, have unit variance, and are uncorrelated.
     The index is not commonly used for community data, but it is
     sometimes used for environmental variables. The calculation is
     based on transforming data matrix and then using Euclidean
     distances following Mardia et al. (1979).

     Euclidean and Manhattan dissimilarities are not good in gradient
     separation without proper standardization but are still included
     for comparison and special needs.

     Bray-Curtis and Jaccard indices are rank-order similar, and some
     other indices become identical or rank-order similar after some
     standardizations, especially with presence/absence transformation
     of equalizing site totals with ‘decostand’. Jaccard index is
     metric, and probably should be preferred instead of the default
     Bray-Curtis which is semimetric.

     The naming conventions vary. The one adopted here is traditional
     rather than truthful to priority. The function finds either
     quantitative or binary variants of the indices under the same
     name, which correctly may refer only to one of these alternatives
     For instance, the Bray index is known also as Steinhaus,
     Czekanowski and Sørensen index.  The quantitative version of
     Jaccard should probably called Ružička index.  The abbreviation
     ‘"horn"’ for the Horn-Morisita index is misleading, since there is
     a separate Horn index. The abbreviation will be changed if that
     index is implemented in ‘vegan’.

_V_a_l_u_e:

     Should provide a drop-in replacement for ‘dist’ and return a
     distance object of the same type.

_N_o_t_e:

     The function is an alternative to ‘dist’ adding some ecologically
     meaningful indices.  Both methods should produce similar types of
     objects which can be interchanged in any method accepting either.
     Manhattan and Euclidean dissimilarities should be identical in
     both methods. Canberra index is divided by the number of variables
     in ‘vegdist’, but not in ‘dist’.  So these differ by a constant
     multiplier, and the alternative in ‘vegdist’ is in range (0,1).
     Function ‘daisy’ (package ‘cluster’) provides alternative
     implementation of Gower index that also can handle mixed data of
     numeric and class variables.  There are two versions of Gower
     distance (‘"gower"’, ‘"altGower"’) which differ in scaling:
     ‘"gower"’ divides all distances by the number of observations
     (rows) and scales each column to unit range, but ‘"altGower"’
     omits double-zeros and divides by the number of pairs with at
     least one above-zero value, and does not scale columns (Anderson
     et al. 2006).  You can use ‘decostand’ to add range
     standardization to ‘"altGower"’ (see Examples). Gower (1971)
     suggested omitting double zeros for presences, but it is often
     taken as the general feature of the Gower distances. See Examples
     for implementing the Anderson et al. (2006) variant of the Gower
     index.

     Most dissimilarity indices in ‘vegdist’ are designed for community
     data, and they will give misleading values if there are negative
     data entries.  The results may also be misleading or ‘NA’ or ‘NaN’
     if there are empty sites.  In principle, you cannot study species
     composition without species and you should remove empty sites from
     community data.

_A_u_t_h_o_r(_s):

     Jari Oksanen, with contributions from Tyler Smith (Gower index)
     and Michael Bedward (Raup-Crick index).

_R_e_f_e_r_e_n_c_e_s:

     Anderson, M.J. and Millar, R.B. (2004). Spatial variation and
     effects of habitat on temperate reef fish assemblages in
     northeastern New Zealand.  _Journal of Experimental Marine Biology
     and Ecology_ 305, 191-221.

     Anderson, M.J., Ellingsen, K.E. & McArdle, B.H. (2006).
     Multivariate dispersion as a measure of beta diversity. _Ecology
     Letters_ 9, 683-693.

     Anderson, M.J & Thompson, A.A. (2004). Multivariate control charts
     for ecological and environmental monitoring. _Ecological
     Applications_ 14, 1921-1935.

     Cao, Y., Williams, W.P. & Bark, A.W. (1997). Similarity measure
     bias in river benthic Auswuchs community analysis. _Water
     Environment Research_ 69, 95-106.

     Chao, A., Chazdon, R. L., Colwell, R. K. and Shen, T. (2005). A
     new statistical approach for assessing similarity of species
     composition with incidence and abundance data. _Ecology Letters_
     8, 148-159.

     Chase, J.M., Kraft, N.J.B., Smith, K.G., Vellend, M. and Inouye,
     B.D. (2011). Using null models to disentangle variation in
     community dissimilarity from variation in alpha-diversity.
     _Ecosphere_ 2:art24 [doi:10.1890/ES10-00117.1]

     Faith, D. P, Minchin, P. R. and Belbin, L. (1987).  Compositional
     dissimilarity as a robust measure of ecological distance.
     _Vegetatio_ 69, 57-68.

     Gower, J. C. (1971). A general coefficient of similarity and some
     of its properties. _Biometrics_ 27, 623-637.

     Krebs, C. J. (1999). _Ecological Methodology._ Addison Wesley
     Longman.

     Mardia, K.V., Kent, J.T. and Bibby, J.M. (1979). _Multivariate
     analysis_.  Academic Press.

     Mountford, M. D. (1962). An index of similarity and its
     application to classification problems. In: P.W.Murphy (ed.),
     _Progress in Soil Zoology_, 43-50. Butterworths.

     Veech, J. A. (2013). A probabilistic model for analysing species
     co-occurrence. _Global Ecology and Biogeography_ 22, 252-260.

     Wolda, H. (1981). Similarity indices, sample size and diversity.
     _Oecologia_ 50, 296-302.

_S_e_e _A_l_s_o:

     Function ‘designdist’ can be used for defining your own
     dissimilarity index. Alternative dissimilarity functions include
     ‘dist’ in base R, ‘daisy’ (package ‘cluster’), and ‘dsvdis’
     (package ‘labdsv’).  Function ‘betadiver’ provides indices
     intended for the analysis of beta diversity.

_E_x_a_m_p_l_e_s:

     data(varespec)
     vare.dist <- vegdist(varespec)
     # Orlóci's Chord distance: range 0 .. sqrt(2)
     vare.dist <- vegdist(decostand(varespec, "norm"), "euclidean")
     # Anderson et al.  (2006) version of Gower
     vare.dist <- vegdist(decostand(varespec, "log"), "altGower")
     # Range standardization with "altGower" (that excludes double-zeros)
     vare.dist <- vegdist(decostand(varespec, "range"), "altGower")
     

vegdist                 package:vegan                  R Documentation

_D_i_s_s_i_m_i_l_a_r_i_t_y _I_n_d_i_c_e_s _f_o_r _C_o_m_m_u_n_i_t_y _E_c_o_l_o_g_i_s_t_s

_D_e_s_c_r_i_p_t_i_o_n:

     The function computes dissimilarity indices that are useful for or
     popular with community ecologists. All indices use quantitative
     data, although they would be named by the corresponding binary
     index, but you can calculate the binary index using an appropriate
     argument.  If you do not find your favourite index here, you can
     see if it can be implemented using ‘designdist’.  Gower,
     Bray-Curtis, Jaccard and Kulczynski indices are good in detecting
     underlying ecological gradients (Faith et al. 1987). Morisita,
     Horn-Morisita, Binomial, Cao and Chao indices should be able to
     handle different sample sizes (Wolda 1981, Krebs 1999, Anderson &
     Millar 2004), and Mountford (1962) and Raup-Crick indices for
     presence-absence data should be able to handle unknown (and
     variable) sample sizes.

_U_s_a_g_e:

     vegdist(x, method="bray", binary=FALSE, diag=FALSE, upper=FALSE,
             na.rm = FALSE, ...) 
     
_A_r_g_u_m_e_n_t_s:

       x: Community data matrix.

  method: Dissimilarity index, partial match to ‘"manhattan"’,
          ‘"euclidean"’, ‘"canberra"’, ‘"bray"’, ‘"kulczynski"’,
          ‘"jaccard"’, ‘"gower"’, ‘"altGower"’, ‘"morisita"’, ‘"horn"’,
          ‘"mountford"’, ‘"raup"’ , ‘"binomial"’, ‘"chao"’, ‘"cao"’ or
          ‘"mahalanobis"’.

  binary: Perform presence/absence standardization before analysis
          using ‘decostand’.

    diag: Compute diagonals.

   upper: Return only the upper diagonal.

   na.rm: Pairwise deletion of missing observations when computing
          dissimilarities.

     ...: Other parameters.  These are ignored, except in ‘method
          ="gower"’ which accepts ‘range.global’ parameter of
          ‘decostand’. .

_D_e_t_a_i_l_s:

     Jaccard (‘"jaccard"’), Mountford (‘"mountford"’), Raup-Crick
     (‘"raup"’), Binomial and Chao indices are discussed later in this
     section.  The function also finds indices for presence/ absence
     data by setting ‘binary = TRUE’. The following overview gives
     first the quantitative version, where x[ij] x[ik] refer to the
     quantity on species (column) i and sites (rows) j and k. In binary
     versions A and B are the numbers of species on compared sites, and
     J is the number of species that occur on both compared sites
     similarly as in ‘designdist’ (many indices produce identical
     binary versions):

       ‘euclidean’   d[jk] = sqrt(sum(x[ij]-x[ik])^2)                             
                     binary: sqrt(A+B-2*J)                                        
       ‘manhattan’   d[jk] = sum(abs(x[ij] - x[ik]))                              
                     binary: A+B-2*J                                              
       ‘gower’       d[jk] = (1/M) sum(abs(x[ij]-x[ik])/(max(x[i])-min(x[i])))    
                     binary: (A+B-2*J)/M,                                         
                     where M is the number of columns (excluding missingvalues)   
                                                                                  
       ‘altGower’    d[jk] = (1/NZ) sum(abs(x[ij] - x[ik]))                       
                     where NZ is the number of non-zero columns excluding 
                     double-zeros (Anderson et al. 2006). 
                     binary: (A+B-2*J)/(A+B-J)                                    
       ‘canberra’    d[jk] = (1/NZ) sum ((x[ij]-x[ik])/(x[ij]+x[ik]))             
                     where NZ is the number of non-zero entries.                  
                     binary: (A+B-2*J)/(A+B-J)                                    
       ‘bray’        d[jk] = (sum abs(x[ij]-x[ik]))/(sum (x[ij]+x[ik]))           
                     binary: (A+B-2*J)/(A+B)                                      
       ‘kulczynski’  d[jk] 1 - 0.5*((sum min(x[ij],x[ik])/(sum x[ij]) + (sum 
                     min(x[ij],x[ik])/(sum x[ik])) 
                     binary: 1-(J/A + J/B)/2                                      
       ‘morisita’    d[jk] =  1 - 2*sum(x[ij]*x[ik])/((lambda[j]+lambda[k]) * 
                     sum(x[ij])*sum(x[ik])), where 
                     lambda[j] = sum(x[ij]*(x[ij]-1))/sum(x[ij])*sum(x[ij]-1)     
                     binary: cannot be calculated                                 
       ‘horn’        Like ‘morisita’, but lambda[j] = sum(x[ij]^2)/(sum(x[ij])^2) 
                     binary: (A+B-2*J)/(A+B)                                      
       ‘binomial’    d[jk] = 
                     sum(x[ij]*log(x[ij]/n[i]) + x[ik]*log(x[ik]/n[i]) - 
                     n[i]*log(1/2))/n[i], 
                     where n[i] = x[ij] + x[ik]                                   
                     binary: log(2)*(A+B-2*J)                                     
       ‘cao’         d[jk] = (1/S) * sum(log(n[i]/2) - 
                     (x[ij]*log(x[ik]) + x[ik]*log(x[ij]))/n[i]), 
                     where S is the number of species in compared sites and 
                     n[i] = x[ij] + x[ik] 
      
     Jaccard index is computed as 2B/(1+B), where B is Bray-Curtis
     dissimilarity.

     Binomial index is derived from Binomial deviance under null
     hypothesis that the two compared communities are equal. It should
     be able to handle variable sample sizes. The index does not have a
     fixed upper limit, but can vary among sites with no shared
     species. For further discussion, see Anderson & Millar (2004).

     Cao index or CYd index (Cao et al. 1997) was suggested as a
     minimally biased index for high beta diversity and variable
     sampling intensity.  Cao index does not have a fixed upper limit,
     but can vary among sites with no shared species.  The index is
     intended for count (integer) data, and it is undefined for zero
     abundances; these are replaced with arbitrary value 0.1 following
     Cao et al. (1997).  Cao et al. (1997) used log10, but the current
     function uses natural logarithms so that the values are
     approximately 2.30 times higher than with 10-based logarithms.
     Anderson & Thompson (2004) give an alternative formulation of Cao
     index to highlight its relationship with Binomial index (above).

     Mountford index is defined as M = 1/alpha where alpha is the
     parameter of Fisher's logseries assuming that the compared
     communities are samples from the same community (cf. ‘fisherfit’,
     ‘fisher.alpha’). The index M is found as the positive root of
     equation exp(a*M) + exp(b*M) = 1 + exp((a+b-j)*M), where j is the
     number of species occurring in both communities, and a and b are
     the number of species in each separate community (so the index
     uses presence-absence information). Mountford index is usually
     misrepresented in the literature: indeed Mountford (1962)
     suggested an approximation to be used as starting value in
     iterations, but the proper index is defined as the root of the
     equation above. The function ‘vegdist’ solves M with the Newton
     method. Please note that if either a or b are equal to j, one of
     the communities could be a subset of other, and the dissimilarity
     is 0 meaning that non-identical objects may be regarded as similar
     and the index is non-metric. The Mountford index is in the range 0
     ... log(2), but the dissimilarities are divided by log(2) so that
     the results will be in the conventional range 0 ... 1.

     Raup-Crick dissimilarity (‘method = "raup"’) is a probabilistic
     index based on presence/absence data.  It is defined as 1 -
     prob(j), or based on the probability of observing at least j
     species in shared in compared communities.  The current function
     uses analytic result from hypergeometric distribution (‘phyper’)
     to find the probabilities.  This probability (and the index) is
     dependent on the number of species missing in both sites, and
     adding all-zero species to the data or removing missing species
     from the data will influence the index.  The probability (and the
     index) may be almost zero or almost one for a wide range of
     parameter values.  The index is nonmetric: two communities with no
     shared species may have a dissimilarity slightly below one, and
     two identical communities may have dissimilarity slightly above
     zero. The index uses equal occurrence probabilities for all
     species, but Raup and Crick originally suggested that sampling
     probabilities should be proportional to species frequencies (Chase
     et al. 2011). A simulation approach with unequal species sampling
     probabilities is implemented in ‘raupcrick’ function following
     Chase et al. (2011).  The index can be also used for transposed
     data to give a probabilistic dissimilarity index of species
     co-occurrence (identical to Veech 2013).

     Chao index tries to take into account the number of unseen species
     pairs, similarly as in ‘method = "chao"’ in ‘specpool’. Function
     ‘vegdist’ implements a Jaccard type index defined as d[jk] = 1 -
     U[j]*U[k]/(U[j] + U[k] - U[j]*U[k]), where U[j] = C[j]/N[j] +
     (N[k] -1)/N[k] * a1/(2*a2) * S[j]/N[j], and similarly for U[k].
     Here C[j] is the total number of individuals in the species of
     site j that are shared with site k, N[j] is the total number of
     individuals at site j, a1 (and a2) are the number of species
     occurring in site j that have only one (or two) individuals in
     site k, and S[j] is the total number of individuals in the species
     present at site j that occur with only one individual in site k
     (Chao et al. 2005).

     Morisita index can be used with genuine count data (integers)
     only. Its Horn-Morisita variant is able to handle any abundance
     data.

     Mahalanobis distances are Euclidean distances of a matrix where
     columns are centred, have unit variance, and are uncorrelated.
     The index is not commonly used for community data, but it is
     sometimes used for environmental variables. The calculation is
     based on transforming data matrix and then using Euclidean
     distances following Mardia et al. (1979).

     Euclidean and Manhattan dissimilarities are not good in gradient
     separation without proper standardization but are still included
     for comparison and special needs.

     Bray-Curtis and Jaccard indices are rank-order similar, and some
     other indices become identical or rank-order similar after some
     standardizations, especially with presence/absence transformation
     of equalizing site totals with ‘decostand’. Jaccard index is
     metric, and probably should be preferred instead of the default
     Bray-Curtis which is semimetric.

     The naming conventions vary. The one adopted here is traditional
     rather than truthful to priority. The function finds either
     quantitative or binary variants of the indices under the same
     name, which correctly may refer only to one of these alternatives
     For instance, the Bray index is known also as Steinhaus,
     Czekanowski and Sørensen index.  The quantitative version of
     Jaccard should probably called Ružička index.  The abbreviation
     ‘"horn"’ for the Horn-Morisita index is misleading, since there is
     a separate Horn index. The abbreviation will be changed if that
     index is implemented in ‘vegan’.

_V_a_l_u_e:

     Should provide a drop-in replacement for ‘dist’ and return a
     distance object of the same type.

_N_o_t_e:

     The function is an alternative to ‘dist’ adding some ecologically
     meaningful indices.  Both methods should produce similar types of
     objects which can be interchanged in any method accepting either.
     Manhattan and Euclidean dissimilarities should be identical in
     both methods. Canberra index is divided by the number of variables
     in ‘vegdist’, but not in ‘dist’.  So these differ by a constant
     multiplier, and the alternative in ‘vegdist’ is in range (0,1).
     Function ‘daisy’ (package ‘cluster’) provides alternative
     implementation of Gower index that also can handle mixed data of
     numeric and class variables.  There are two versions of Gower
     distance (‘"gower"’, ‘"altGower"’) which differ in scaling:
     ‘"gower"’ divides all distances by the number of observations
     (rows) and scales each column to unit range, but ‘"altGower"’
     omits double-zeros and divides by the number of pairs with at
     least one above-zero value, and does not scale columns (Anderson
     et al. 2006).  You can use ‘decostand’ to add range
     standardization to ‘"altGower"’ (see Examples). Gower (1971)
     suggested omitting double zeros for presences, but it is often
     taken as the general feature of the Gower distances. See Examples
     for implementing the Anderson et al. (2006) variant of the Gower
     index.

     Most dissimilarity indices in ‘vegdist’ are designed for community
     data, and they will give misleading values if there are negative
     data entries.  The results may also be misleading or ‘NA’ or ‘NaN’
     if there are empty sites.  In principle, you cannot study species
     composition without species and you should remove empty sites from
     community data.

_A_u_t_h_o_r(_s):

     Jari Oksanen, with contributions from Tyler Smith (Gower index)
     and Michael Bedward (Raup-Crick index).

_R_e_f_e_r_e_n_c_e_s:

     Anderson, M.J. and Millar, R.B. (2004). Spatial variation and
     effects of habitat on temperate reef fish assemblages in
     northeastern New Zealand.  _Journal of Experimental Marine Biology
     and Ecology_ 305, 191-221.

     Anderson, M.J., Ellingsen, K.E. & McArdle, B.H. (2006).
     Multivariate dispersion as a measure of beta diversity. _Ecology
     Letters_ 9, 683-693.

     Anderson, M.J & Thompson, A.A. (2004). Multivariate control charts
     for ecological and environmental monitoring. _Ecological
     Applications_ 14, 1921-1935.

     Cao, Y., Williams, W.P. & Bark, A.W. (1997). Similarity measure
     bias in river benthic Auswuchs community analysis. _Water
     Environment Research_ 69, 95-106.

     Chao, A., Chazdon, R. L., Colwell, R. K. and Shen, T. (2005). A
     new statistical approach for assessing similarity of species
     composition with incidence and abundance data. _Ecology Letters_
     8, 148-159.

     Chase, J.M., Kraft, N.J.B., Smith, K.G., Vellend, M. and Inouye,
     B.D. (2011). Using null models to disentangle variation in
     community dissimilarity from variation in alpha-diversity.
     _Ecosphere_ 2:art24 [doi:10.1890/ES10-00117.1]

     Faith, D. P, Minchin, P. R. and Belbin, L. (1987).  Compositional
     dissimilarity as a robust measure of ecological distance.
     _Vegetatio_ 69, 57-68.

     Gower, J. C. (1971). A general coefficient of similarity and some
     of its properties. _Biometrics_ 27, 623-637.

     Krebs, C. J. (1999). _Ecological Methodology._ Addison Wesley
     Longman.

     Mardia, K.V., Kent, J.T. and Bibby, J.M. (1979). _Multivariate
     analysis_.  Academic Press.

     Mountford, M. D. (1962). An index of similarity and its
     application to classification problems. In: P.W.Murphy (ed.),
     _Progress in Soil Zoology_, 43-50. Butterworths.

     Veech, J. A. (2013). A probabilistic model for analysing species
     co-occurrence. _Global Ecology and Biogeography_ 22, 252-260.

     Wolda, H. (1981). Similarity indices, sample size and diversity.
     _Oecologia_ 50, 296-302.

_S_e_e _A_l_s_o:

     Function ‘designdist’ can be used for defining your own
     dissimilarity index. Alternative dissimilarity functions include
     ‘dist’ in base R, ‘daisy’ (package ‘cluster’), and ‘dsvdis’
     (package ‘labdsv’).  Function ‘betadiver’ provides indices
     intended for the analysis of beta diversity.

_E_x_a_m_p_l_e_s:

     data(varespec)
     vare.dist <- vegdist(varespec)
     # Orlóci's Chord distance: range 0 .. sqrt(2)
     vare.dist <- vegdist(decostand(varespec, "norm"), "euclidean")
     # Anderson et al.  (2006) version of Gower
     vare.dist <- vegdist(decostand(varespec, "log"), "altGower")
     # Range standardization with "altGower" (that excludes double-zeros)
     vare.dist <- vegdist(decostand(varespec, "range"), "altGower")
     

decostand                package:vegan                 R Documentation

_S_t_a_n_d_a_r_d_i_z_a_t_i_o_n _M_e_t_h_o_d_s _f_o_r _C_o_m_m_u_n_i_t_y _E_c_o_l_o_g_y

_D_e_s_c_r_i_p_t_i_o_n:

     The function provides some popular (and effective) standardization
     methods for community ecologists.

_U_s_a_g_e:

     decostand(x, method, MARGIN, range.global, logbase = 2, na.rm=FALSE, ...)
     wisconsin(x)
     
_A_r_g_u_m_e_n_t_s:

       x: Community data, a matrix-like object.

  method: Standardization method. See Details for available options.

  MARGIN: Margin, if default is not acceptable. ‘1’ = rows, and ‘2’ =
          columns of ‘x’.

range.global: Matrix from which the range is found in ‘method =
          "range"’.  This allows using same ranges across subsets of
          data.  The dimensions of ‘MARGIN’ must match with ‘x’.

 logbase: The logarithm base used in ‘method = "log"’.

   na.rm: Ignore missing values in row or column standardizations.

     ...: Other arguments to the function (ignored).

_D_e_t_a_i_l_s:

     The function offers following standardization methods for
     community data:

        • ‘total’: divide by margin total (default ‘MARGIN = 1’).

        • ‘max’: divide by margin maximum (default ‘MARGIN = 2’).

        • ‘freq’: divide by margin maximum and multiply by the number
          of non-zero items, so that the average of non-zero entries is
          one (Oksanen 1983; default ‘MARGIN = 2’).

        • ‘normalize’: make margin sum of squares equal to one (default
          ‘MARGIN = 1’).

        • ‘range’: standardize values into range 0 ... 1 (default
          ‘MARGIN = 2’).  If all values are constant, they will be
          transformed to 0.

        • ‘standardize’: scale ‘x’ to zero mean and unit variance
          (default ‘MARGIN = 2’).

        • ‘pa’: scale ‘x’ to presence/absence scale (0/1).

        • ‘chi.square’: divide by row sums and square root of column
          sums, and adjust for square root of matrix total (Legendre &
          Gallagher 2001). When used with the Euclidean distance, the
          distances should be similar to the Chi-square distance used
          in correspondence analysis. However, the results from
          ‘cmdscale’ would still differ, since CA is a weighted
          ordination method (default ‘MARGIN = 1’).

        • ‘hellinger’: square root of ‘method = "total"’ (Legendre &
          Gallagher 2001).

        • ‘log’: logarithmic transformation as suggested by Anderson et
          al. (2006): log_b (x) + 1 for x > 0, where b is the base of
          the logarithm; zeros are left as zeros. Higher bases give
          less weight to quantities and more to presences, and ‘logbase
          = Inf’ gives the presence/absence scaling. Please note this
          is _not_ log(x+1).  Anderson et al. (2006) suggested this for
          their (strongly) modified Gower distance (implemented as
          ‘method = "altGower"’ in ‘vegdist’), but the standardization
          can be used independently of distance indices.

     Standardization, as contrasted to transformation, means that the
     entries are transformed relative to other entries.

     All methods have a default margin. ‘MARGIN=1’ means rows (sites in
     a normal data set) and ‘MARGIN=2’ means columns (species in a
     normal data set).

     Command ‘wisconsin’ is a shortcut to common Wisconsin double
     standardization where species (‘MARGIN=2’) are first standardized
     by maxima (‘max’) and then sites (‘MARGIN=1’) by site totals
     (‘tot’).

     Most standardization methods will give nonsense results with
     negative data entries that normally should not occur in the
     community data. If there are empty sites or species (or constant
     with ‘method = "range"’), many standardization will change these
     into ‘NaN’.

_V_a_l_u_e:

     Returns the standardized data frame, and adds an attribute
     ‘"decostand"’ giving the name of applied standardization
     ‘"method"’.

_N_o_t_e:

     Common transformations can be made with standard R functions.

_A_u_t_h_o_r(_s):

     Jari Oksanen, Etienne Laliberté (‘method = "log"’).

_R_e_f_e_r_e_n_c_e_s:

     Anderson, M.J., Ellingsen, K.E. & McArdle, B.H. (2006)
     Multivariate dispersion as a measure of beta diversity. _Ecology
     Letters_ *9*, 683-693.

     Legendre, P. & Gallagher, E.D. (2001) Ecologically meaningful
     transformations for ordination of species data. _Oecologia_ *129*,
     271-280.

     Oksanen, J. (1983) Ordination of boreal heath-like vegetation with
     principal component analysis, correspondence analysis and
     multidimensional scaling. _Vegetatio_ *52*, 181-189.

_E_x_a_m_p_l_e_s:

     data(varespec)
     sptrans <- decostand(varespec, "max")
     apply(sptrans, 2, max)
     sptrans <- wisconsin(varespec)
     
     ## Chi-square: PCA similar but not identical to CA.
     ## Use wcmdscale for weighted analysis and identical results.
     sptrans <- decostand(varespec, "chi.square")
     plot(procrustes(rda(sptrans), cca(varespec)))
     

vegdist                 package:vegan                  R Documentation

_D_i_s_s_i_m_i_l_a_r_i_t_y _I_n_d_i_c_e_s _f_o_r _C_o_m_m_u_n_i_t_y _E_c_o_l_o_g_i_s_t_s

_D_e_s_c_r_i_p_t_i_o_n:

     The function computes dissimilarity indices that are useful for or
     popular with community ecologists. All indices use quantitative
     data, although they would be named by the corresponding binary
     index, but you can calculate the binary index using an appropriate
     argument.  If you do not find your favourite index here, you can
     see if it can be implemented using ‘designdist’.  Gower,
     Bray-Curtis, Jaccard and Kulczynski indices are good in detecting
     underlying ecological gradients (Faith et al. 1987). Morisita,
     Horn-Morisita, Binomial, Cao and Chao indices should be able to
     handle different sample sizes (Wolda 1981, Krebs 1999, Anderson &
     Millar 2004), and Mountford (1962) and Raup-Crick indices for
     presence-absence data should be able to handle unknown (and
     variable) sample sizes.

_U_s_a_g_e:

     vegdist(x, method="bray", binary=FALSE, diag=FALSE, upper=FALSE,
             na.rm = FALSE, ...) 
     
_A_r_g_u_m_e_n_t_s:

       x: Community data matrix.

  method: Dissimilarity index, partial match to ‘"manhattan"’,
          ‘"euclidean"’, ‘"canberra"’, ‘"bray"’, ‘"kulczynski"’,
          ‘"jaccard"’, ‘"gower"’, ‘"altGower"’, ‘"morisita"’, ‘"horn"’,
          ‘"mountford"’, ‘"raup"’ , ‘"binomial"’, ‘"chao"’, ‘"cao"’ or
          ‘"mahalanobis"’.

  binary: Perform presence/absence standardization before analysis
          using ‘decostand’.

    diag: Compute diagonals.

   upper: Return only the upper diagonal.

   na.rm: Pairwise deletion of missing observations when computing
          dissimilarities.

     ...: Other parameters.  These are ignored, except in ‘method
          ="gower"’ which accepts ‘range.global’ parameter of
          ‘decostand’. .

_D_e_t_a_i_l_s:

     Jaccard (‘"jaccard"’), Mountford (‘"mountford"’), Raup-Crick
     (‘"raup"’), Binomial and Chao indices are discussed later in this
     section.  The function also finds indices for presence/ absence
     data by setting ‘binary = TRUE’. The following overview gives
     first the quantitative version, where x[ij] x[ik] refer to the
     quantity on species (column) i and sites (rows) j and k. In binary
     versions A and B are the numbers of species on compared sites, and
     J is the number of species that occur on both compared sites
     similarly as in ‘designdist’ (many indices produce identical
     binary versions):

       ‘euclidean’   d[jk] = sqrt(sum(x[ij]-x[ik])^2)                             
                     binary: sqrt(A+B-2*J)                                        
       ‘manhattan’   d[jk] = sum(abs(x[ij] - x[ik]))                              
                     binary: A+B-2*J                                              
       ‘gower’       d[jk] = (1/M) sum(abs(x[ij]-x[ik])/(max(x[i])-min(x[i])))    
                     binary: (A+B-2*J)/M,                                         
                     where M is the number of columns (excluding missingvalues)   
                                                                                  
       ‘altGower’    d[jk] = (1/NZ) sum(abs(x[ij] - x[ik]))                       
                     where NZ is the number of non-zero columns excluding 
                     double-zeros (Anderson et al. 2006). 
                     binary: (A+B-2*J)/(A+B-J)                                    
       ‘canberra’    d[jk] = (1/NZ) sum ((x[ij]-x[ik])/(x[ij]+x[ik]))             
                     where NZ is the number of non-zero entries.                  
                     binary: (A+B-2*J)/(A+B-J)                                    
       ‘bray’        d[jk] = (sum abs(x[ij]-x[ik]))/(sum (x[ij]+x[ik]))           
                     binary: (A+B-2*J)/(A+B)                                      
       ‘kulczynski’  d[jk] 1 - 0.5*((sum min(x[ij],x[ik])/(sum x[ij]) + (sum 
                     min(x[ij],x[ik])/(sum x[ik])) 
                     binary: 1-(J/A + J/B)/2                                      
       ‘morisita’    d[jk] =  1 - 2*sum(x[ij]*x[ik])/((lambda[j]+lambda[k]) * 
                     sum(x[ij])*sum(x[ik])), where 
                     lambda[j] = sum(x[ij]*(x[ij]-1))/sum(x[ij])*sum(x[ij]-1)     
                     binary: cannot be calculated                                 
       ‘horn’        Like ‘morisita’, but lambda[j] = sum(x[ij]^2)/(sum(x[ij])^2) 
                     binary: (A+B-2*J)/(A+B)                                      
       ‘binomial’    d[jk] = 
                     sum(x[ij]*log(x[ij]/n[i]) + x[ik]*log(x[ik]/n[i]) - 
                     n[i]*log(1/2))/n[i], 
                     where n[i] = x[ij] + x[ik]                                   
                     binary: log(2)*(A+B-2*J)                                     
       ‘cao’         d[jk] = (1/S) * sum(log(n[i]/2) - 
                     (x[ij]*log(x[ik]) + x[ik]*log(x[ij]))/n[i]), 
                     where S is the number of species in compared sites and 
                     n[i] = x[ij] + x[ik] 
      
     Jaccard index is computed as 2B/(1+B), where B is Bray-Curtis
     dissimilarity.

     Binomial index is derived from Binomial deviance under null
     hypothesis that the two compared communities are equal. It should
     be able to handle variable sample sizes. The index does not have a
     fixed upper limit, but can vary among sites with no shared
     species. For further discussion, see Anderson & Millar (2004).

     Cao index or CYd index (Cao et al. 1997) was suggested as a
     minimally biased index for high beta diversity and variable
     sampling intensity.  Cao index does not have a fixed upper limit,
     but can vary among sites with no shared species.  The index is
     intended for count (integer) data, and it is undefined for zero
     abundances; these are replaced with arbitrary value 0.1 following
     Cao et al. (1997).  Cao et al. (1997) used log10, but the current
     function uses natural logarithms so that the values are
     approximately 2.30 times higher than with 10-based logarithms.
     Anderson & Thompson (2004) give an alternative formulation of Cao
     index to highlight its relationship with Binomial index (above).

     Mountford index is defined as M = 1/alpha where alpha is the
     parameter of Fisher's logseries assuming that the compared
     communities are samples from the same community (cf. ‘fisherfit’,
     ‘fisher.alpha’). The index M is found as the positive root of
     equation exp(a*M) + exp(b*M) = 1 + exp((a+b-j)*M), where j is the
     number of species occurring in both communities, and a and b are
     the number of species in each separate community (so the index
     uses presence-absence information). Mountford index is usually
     misrepresented in the literature: indeed Mountford (1962)
     suggested an approximation to be used as starting value in
     iterations, but the proper index is defined as the root of the
     equation above. The function ‘vegdist’ solves M with the Newton
     method. Please note that if either a or b are equal to j, one of
     the communities could be a subset of other, and the dissimilarity
     is 0 meaning that non-identical objects may be regarded as similar
     and the index is non-metric. The Mountford index is in the range 0
     ... log(2), but the dissimilarities are divided by log(2) so that
     the results will be in the conventional range 0 ... 1.

     Raup-Crick dissimilarity (‘method = "raup"’) is a probabilistic
     index based on presence/absence data.  It is defined as 1 -
     prob(j), or based on the probability of observing at least j
     species in shared in compared communities.  The current function
     uses analytic result from hypergeometric distribution (‘phyper’)
     to find the probabilities.  This probability (and the index) is
     dependent on the number of species missing in both sites, and
     adding all-zero species to the data or removing missing species
     from the data will influence the index.  The probability (and the
     index) may be almost zero or almost one for a wide range of
     parameter values.  The index is nonmetric: two communities with no
     shared species may have a dissimilarity slightly below one, and
     two identical communities may have dissimilarity slightly above
     zero. The index uses equal occurrence probabilities for all
     species, but Raup and Crick originally suggested that sampling
     probabilities should be proportional to species frequencies (Chase
     et al. 2011). A simulation approach with unequal species sampling
     probabilities is implemented in ‘raupcrick’ function following
     Chase et al. (2011).  The index can be also used for transposed
     data to give a probabilistic dissimilarity index of species
     co-occurrence (identical to Veech 2013).

     Chao index tries to take into account the number of unseen species
     pairs, similarly as in ‘method = "chao"’ in ‘specpool’. Function
     ‘vegdist’ implements a Jaccard type index defined as d[jk] = 1 -
     U[j]*U[k]/(U[j] + U[k] - U[j]*U[k]), where U[j] = C[j]/N[j] +
     (N[k] -1)/N[k] * a1/(2*a2) * S[j]/N[j], and similarly for U[k].
     Here C[j] is the total number of individuals in the species of
     site j that are shared with site k, N[j] is the total number of
     individuals at site j, a1 (and a2) are the number of species
     occurring in site j that have only one (or two) individuals in
     site k, and S[j] is the total number of individuals in the species
     present at site j that occur with only one individual in site k
     (Chao et al. 2005).

     Morisita index can be used with genuine count data (integers)
     only. Its Horn-Morisita variant is able to handle any abundance
     data.

     Mahalanobis distances are Euclidean distances of a matrix where
     columns are centred, have unit variance, and are uncorrelated.
     The index is not commonly used for community data, but it is
     sometimes used for environmental variables. The calculation is
     based on transforming data matrix and then using Euclidean
     distances following Mardia et al. (1979).

     Euclidean and Manhattan dissimilarities are not good in gradient
     separation without proper standardization but are still included
     for comparison and special needs.

     Bray-Curtis and Jaccard indices are rank-order similar, and some
     other indices become identical or rank-order similar after some
     standardizations, especially with presence/absence transformation
     of equalizing site totals with ‘decostand’. Jaccard index is
     metric, and probably should be preferred instead of the default
     Bray-Curtis which is semimetric.

     The naming conventions vary. The one adopted here is traditional
     rather than truthful to priority. The function finds either
     quantitative or binary variants of the indices under the same
     name, which correctly may refer only to one of these alternatives
     For instance, the Bray index is known also as Steinhaus,
     Czekanowski and Sørensen index.  The quantitative version of
     Jaccard should probably called Ružička index.  The abbreviation
     ‘"horn"’ for the Horn-Morisita index is misleading, since there is
     a separate Horn index. The abbreviation will be changed if that
     index is implemented in ‘vegan’.

_V_a_l_u_e:

     Should provide a drop-in replacement for ‘dist’ and return a
     distance object of the same type.

_N_o_t_e:

     The function is an alternative to ‘dist’ adding some ecologically
     meaningful indices.  Both methods should produce similar types of
     objects which can be interchanged in any method accepting either.
     Manhattan and Euclidean dissimilarities should be identical in
     both methods. Canberra index is divided by the number of variables
     in ‘vegdist’, but not in ‘dist’.  So these differ by a constant
     multiplier, and the alternative in ‘vegdist’ is in range (0,1).
     Function ‘daisy’ (package ‘cluster’) provides alternative
     implementation of Gower index that also can handle mixed data of
     numeric and class variables.  There are two versions of Gower
     distance (‘"gower"’, ‘"altGower"’) which differ in scaling:
     ‘"gower"’ divides all distances by the number of observations
     (rows) and scales each column to unit range, but ‘"altGower"’
     omits double-zeros and divides by the number of pairs with at
     least one above-zero value, and does not scale columns (Anderson
     et al. 2006).  You can use ‘decostand’ to add range
     standardization to ‘"altGower"’ (see Examples). Gower (1971)
     suggested omitting double zeros for presences, but it is often
     taken as the general feature of the Gower distances. See Examples
     for implementing the Anderson et al. (2006) variant of the Gower
     index.

     Most dissimilarity indices in ‘vegdist’ are designed for community
     data, and they will give misleading values if there are negative
     data entries.  The results may also be misleading or ‘NA’ or ‘NaN’
     if there are empty sites.  In principle, you cannot study species
     composition without species and you should remove empty sites from
     community data.

_A_u_t_h_o_r(_s):

     Jari Oksanen, with contributions from Tyler Smith (Gower index)
     and Michael Bedward (Raup-Crick index).

_R_e_f_e_r_e_n_c_e_s:

     Anderson, M.J. and Millar, R.B. (2004). Spatial variation and
     effects of habitat on temperate reef fish assemblages in
     northeastern New Zealand.  _Journal of Experimental Marine Biology
     and Ecology_ 305, 191-221.

     Anderson, M.J., Ellingsen, K.E. & McArdle, B.H. (2006).
     Multivariate dispersion as a measure of beta diversity. _Ecology
     Letters_ 9, 683-693.

     Anderson, M.J & Thompson, A.A. (2004). Multivariate control charts
     for ecological and environmental monitoring. _Ecological
     Applications_ 14, 1921-1935.

     Cao, Y., Williams, W.P. & Bark, A.W. (1997). Similarity measure
     bias in river benthic Auswuchs community analysis. _Water
     Environment Research_ 69, 95-106.

     Chao, A., Chazdon, R. L., Colwell, R. K. and Shen, T. (2005). A
     new statistical approach for assessing similarity of species
     composition with incidence and abundance data. _Ecology Letters_
     8, 148-159.

     Chase, J.M., Kraft, N.J.B., Smith, K.G., Vellend, M. and Inouye,
     B.D. (2011). Using null models to disentangle variation in
     community dissimilarity from variation in alpha-diversity.
     _Ecosphere_ 2:art24 [doi:10.1890/ES10-00117.1]

     Faith, D. P, Minchin, P. R. and Belbin, L. (1987).  Compositional
     dissimilarity as a robust measure of ecological distance.
     _Vegetatio_ 69, 57-68.

     Gower, J. C. (1971). A general coefficient of similarity and some
     of its properties. _Biometrics_ 27, 623-637.

     Krebs, C. J. (1999). _Ecological Methodology._ Addison Wesley
     Longman.

     Mardia, K.V., Kent, J.T. and Bibby, J.M. (1979). _Multivariate
     analysis_.  Academic Press.

     Mountford, M. D. (1962). An index of similarity and its
     application to classification problems. In: P.W.Murphy (ed.),
     _Progress in Soil Zoology_, 43-50. Butterworths.

     Veech, J. A. (2013). A probabilistic model for analysing species
     co-occurrence. _Global Ecology and Biogeography_ 22, 252-260.

     Wolda, H. (1981). Similarity indices, sample size and diversity.
     _Oecologia_ 50, 296-302.

_S_e_e _A_l_s_o:

     Function ‘designdist’ can be used for defining your own
     dissimilarity index. Alternative dissimilarity functions include
     ‘dist’ in base R, ‘daisy’ (package ‘cluster’), and ‘dsvdis’
     (package ‘labdsv’).  Function ‘betadiver’ provides indices
     intended for the analysis of beta diversity.

_E_x_a_m_p_l_e_s:

     data(varespec)
     vare.dist <- vegdist(varespec)
     # Orlóci's Chord distance: range 0 .. sqrt(2)
     vare.dist <- vegdist(decostand(varespec, "norm"), "euclidean")
     # Anderson et al.  (2006) version of Gower
     vare.dist <- vegdist(decostand(varespec, "log"), "altGower")
     # Range standardization with "altGower" (that excludes double-zeros)
     vare.dist <- vegdist(decostand(varespec, "range"), "altGower")
     

