install.packages(c("caret", "dplyr", "futile.logger", "jsonlite", "lambda.r", "lazyeval", "mime", "multcomp", "plyr", "quantreg", "Rcmdr", "RcppArmadillo", "rmarkdown", "vegan", "XLConnect", "XLConnectJars"))
install.packages("survival")
source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite("rgdal")
biocLite("rgdal")
biocLite("rgdal")
q()
old.packages()
install.packages("survival")
old.packages()
q()
#' ---
#' title: "Data analysis for SCAR talk - combined"
#' author: "Paul Czechowski"
#' date: "August 16th, 2016"
#' output: pdf_document
#' toc: true
#' highlight: zenburn
#' bibliography: ./references.bib
#' ---
#'
#' # Preface
#'
#' This code is tested using a raw R terminal. Path names are
#' defined relative to the project directory. This code commentary is included
#' in the R code itself and can be rendered at any stage using
#' `rmarkdown::render ("60_scar_combined.R")`. Please check the
#' session info at the end of the document for further notes on the coding environment.
#'
#' This code is used for presentation of preliminary results at the SCAR conference
#' 2016. Since I am not yet sure how the `css` scaled data can be used in modelling
#' (it is highly skewed, even after log (?) transformation), this analysis is of
#' preliminary nature.
#' # Prerequisites
#'
#' * Data was pre-processed in Shell and R pipeline as outlined in the documentation
#'   for `pcm_modeling` and in this repository.
#' * This script is located in the project parent directory.
#' * Scripts `10_import_predictors.R`, `20_format_predictors.R` and
#'   `30_format_phyloseq.R` were run.
#' * OR: the objects to be read in are available in a folder tree `Zenodo` in the
#'   project parent directory.
#' * `00_functions.R` is available in the project directory
#'
#' <!-- #################################################################### -->
#' <!-- #################################################################### -->
#'
#' # Environment preparation
#'
#' ## Package loading and cleaning of work-space
#+ message=FALSE, results='hide'
library ("phyloseq")   # required for working with phyloseq objects
library ("ggbiplot")   # package for simple generation of PCA biplots
library ("ggplot2")    # package used for barplot (for themes())
library ("corrplot")   # plotting of correlations ...
library ("ggcorrplot") # ... which can be saved to disk
library ("gridExtra")  # re-arranging graphical objects
library ("GGally")     # scatter plot matrices (geochemical and combined data)
library ("vegan")      # CCA and MDS
library ("dplyr")      # for easier reading of complex expressions
rm(list=ls())          # clear R environment
# working directory is current directory by default
#   and needs not to be set
#' ## Setting locations for data import and export
#'
#' This script uses the objects generated by `40_merging.R` that are located
#' in the `Zenodo` directory tree. It will also write to that location. The
#' number in front of the file name denotes the source script.
# import locations
path_phsq_ob_comb <- "./Zenodo/R_Objects/30_phsq_ob_comb.Rdata"
# combined object
# with sample data
# output locations - technical
path_workspace    <- "./Zenodo/R_Objects/60_workspace.Rdata"
# output locations - graphics for talk
path_coord   <- '/home/paul/Documents/SCAR2016/from_R/60-01_coordinates.csv'
path_bar_mm  <- '/home/paul/Documents/SCAR2016/from_R/60-02_barplot_mm.pdf'
path_bar_me  <- '/home/paul/Documents/SCAR2016/from_R/60-03_barplot_me.pdf'
path_bar_lt  <- '/home/paul/Documents/SCAR2016/from_R/60-04_barplot_lt.pdf'
path_map_pcm <- '/home/paul/Documents/SCAR2016/from_R/60-05_map_pcm.pdf'
path_all_cor <- '/home/paul/Documents/SCAR2016/from_R/60-06_cor_all_vars.pdf'
path_min_cor <- '/home/paul/Documents/SCAR2016/from_R/60-07_cor_min_vars.pdf'
path_sca_tra <- '/home/paul/Documents/SCAR2016/from_R/60-08_sca_tra_all_vars.pdf'
path_vio_tra <- '/home/paul/Documents/SCAR2016/from_R/60-09_vio_tra_all_vars.pdf'
path_pca_var <- '/home/paul/Documents/SCAR2016/from_R/60-10_pca_var_all_vars.pdf'
path_pca_bip <- '/home/paul/Documents/SCAR2016/from_R/60-11_pca_bip_all_vars.pdf'
path_mds_hip <- '/home/paul/Documents/SCAR2016/from_R/60-12_mds_mds_all_vars.pdf'
#' <!-- #################################################################### -->
#' <!-- #################################################################### -->
#' ## Loading functions
#'
#' This script uses many functions, and it impractical  to have them all in here.
#' They are loaded from `00_functions.R`.
source ("00_functions.R")
getwd()
setwd("~/Projects/pcm_inv_env/160808_inv_env")
source ("00_functions.R")
load (path_phsq_ob_comb) # object name is "phsq_ob_comb"
View(add_discretex)
geochems <- c ("AMMN", "NITR", "POTA", "SLPH", "COND", "PHCC",  "PHOS", "CARB",
"PHHO")
# "AMMN" and "NITR" with 57% and 47% undefined data
#   may be removed, these may hold important
#   information. "PHOS" "CARB" may be removed because not
#   relevant for MM?
minerals <- c ("QUTZ", "FDSP", "TTAN", "PRAG", "MICA", "DOLO", "KAOC")
# "CALC" with 33 NA's and "CHLR" with 52 NA's
#   are removed, otherwise the MM mineral composition
#   can't be analysed
location <- c ("AREA")
position <- c ("LONG", "LATI")
# for spatial distance matrices
raw_ages <- c ("LAGE", "HAGE")
# low and high age estimate
#' <!-- #################################################################### -->
#' <!-- #################################################################### -->
#' # Check imported `phyloseq` object
#'
#' The following plots are agglomerated on a specified level in the plotting
#' function. By doing so, "1"s are added up to the indicated rank. In the first
#' plot this effect is visible, and gives an idea of the taxonomic detail of the
#'  data. In the second plot, all added-up values are re-set to one, and the rank
#' level compositions is better visible. This is for diagnostic purposes only,
#' to check if the imported objects are ok.
check1 <- barplot_samples (phsq_ob, "Class")
check2 <- barplot_samples (make_binary (agglomerate (phsq_ob, "Class")), "Class")
#+ message=FALSE, results='hide', warning=FALSE, fig.width=10, fig.height=10, dpi=200, fig.align='center',  fig.cap="Taxonomic composition at selected taxonomic level, with cumulatitive sum scaling. (approx. code line 559)"
grid.arrange(check1, check2, nrow = 2)
#' ## Barplots
#'
#' Bar-plot taxa  by locations. Firstly, building a list which can be used
#' to give and take from plotting function.
# "[[ ]]" to get the atomic vector rather then a sub-data frame, to give a
# character vector of length three (3 locations), finally.
areas <- unique (as.character (as.data.frame ( sample_data (phsq_ob))[["AREA"]]))
# agglomerate on class level
phsq_agg <- agglomerate (phsq_ob, "Class")
#' Now the leeengthy code for the bar plot.
# `subset_samples()` and `lapply()` are still not friends, and busting the
#   column width - oh boy!
phsq_obs <- list (subset_samples (phsq_ob, sample_data (phsq_ob)[, "AREA"] == areas[[1]]),
subset_samples (phsq_ob, sample_data (phsq_ob)[, "AREA"] == areas[[2]]),
subset_samples (phsq_ob, sample_data (phsq_ob)[, "AREA"] == areas[[3]]))
# filter for empty sample columns - no empty columns wanted in plot
phsq_obs <- lapply (phsq_obs, remove_empty)
# this may be wrong due to unknown transformation of abundance data, but at
#   least it increases the bar size so that one can see something.
phsq_obs <- lapply (phsq_obs, make_proportional)
# `plot_bar()` doesn't like `lapply()` either, as it looks, this could be moved
#   away from this script at a later stage
plots <- list (plot_bar (phsq_obs[[1]], fill = "Class", facet_grid = "Phylum~AREA") +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1,
size = 8), strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12, angle = 0),
axis.text.y = element_text (size = 8)) +
geom_bar ( aes(color = Class, fill = Class), stat="identity",
position="stack"),
plot_bar (phsq_obs[[3]], fill = "Class", facet_grid = "Phylum~AREA") +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1,
size = 8), strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12, angle = 0),
axis.text.y = element_text (size = 8)) +
geom_bar ( aes(color = Class, fill = Class), stat="identity",
position="stack"),
plot_bar (phsq_obs[[2]], fill = "Class", facet_grid = "Phylum~AREA") +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1,
size = 8), strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12, angle = 0),
axis.text.y = element_text (size = 8)) +
geom_bar ( aes(color = Class, fill = Class), stat="identity",
position="stack"))
# combine plots
#+ message=FALSE, results='hide', warning=FALSE, fig.width=6, fig.height=9, dpi=200, fig.align='center',  fig.cap="Taxonomic composition on class and phylum levels, per sampling location, css'ed abundances re-scaled to 1 per sample. (approx. code line 213)"
marrangeGrob (plots , nrow=3, ncol=1)
